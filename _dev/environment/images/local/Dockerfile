ARG PHP_PECL_EXTS="redis"
ARG SITE="default"

FROM composer:2.8.11 AS composer_base

ARG SITE

RUN addgroup -S composer \
    &&  adduser -S composer -G composer

WORKDIR /opt/sites 

USER composer 

#command to build an individual site 
#docker compose run composer --working-dir=laravel/deploy install 

#ENTRYPOINT ["tail", "-f", "/dev/null"]

FROM node:23.9.0-alpine3.21 AS frontend

ARG SITE 

WORKDIR /opt/sites/

COPY Sites/ ./

RUN npm --prefix ${SITE} install && npm --prefix ${SITE} run build

#
# FILES GENERATED BY THIS PROCESS 
#
#vite v7.1.5 building for production...
#✓ 53 modules transformed.
#public/build/manifest.json             0.31 kB │ gzip:  0.17 kB
#public/build/assets/app-zLzq_3JD.css  29.96 kB │ gzip:  7.86 kB
#public/build/assets/app-Bj43h_rG.js   36.08 kB │ gzip: 14.58 kB
#
#
# HOWEVER ONCE WE HAVE SET UP OUR OWN WEBPACK.CJS 
# IT WILL ALSO COPY IN PLACE 
# public/vendor/camps/[css|js] files in place 
#
# SO THEREFORE FRONTEND IS THE PLACE TO COPY THESE FILES FROM 
#
#

CMD ["/usr/bin/tail", "-f","/dev/null"]

FROM php:8.3.26RC1-fpm-alpine AS fpm_server

# We need to declare that we want to use the args in this build step
ARG PHP_PECL_EXTS

WORKDIR /opt/sites

RUN apk add --no-cache ${PHPIZE_DEPS} \
        && pecl install ${PHP_PECL_EXTS} \
        && docker-php-ext-enable ${PHP_PECL_EXTS} \
        && apk del ${PHPIZE_DEPS} \ 
        && rm -Rf /var/cache/apk/* \ 
        && rm -Rf /etc/apk/* \
        && addgroup -g 20009 web \ 
        && adduser -u 20008 webuser -G web -D

# Now that we've installed and configured, switch the user 
USER  webuser

# We need an nginx container which can pass requests to our FPM container,
# as well as serve any static content..
FROM nginx:stable-alpine3.20-slim AS nginx

WORKDIR /opt/sites

RUN apk --no-cache add shadow && usermod -u 10014 nginx && \
    groupmod -g 10014 nginx && apk del shadow

RUN touch /var/run/nginx.pid && \
        chown -R nginx:nginx /usr/share/nginx/html && \
        chown -R nginx:nginx /var/cache/nginx && \
        chown -R nginx:nginx /var/log/nginx && \
        chown -R nginx:nginx /etc/nginx && \ 
        chown -R nginx:nginx /var/run/nginx.pid     

USER nginx

# We need an apache container which can pass requests to our FPM container,
# as well as serve any static content..
FROM httpd:alpine3.22 AS apache

WORKDIR /opt/sites 

RUN apk --no-cache add shadow && usermod -u 10015 www-data && \
    groupmod -g 10015 www-data && apk del shadow 

RUN mkdir -p /var/log/apache2 \
        && chown -R www-data:www-data /usr/local/apache2 \ 
        && chown -R www-data:www-data /var/log/apache2 \ 
        && chown -R www-data:www-data /opt/sites 

USER www-data
